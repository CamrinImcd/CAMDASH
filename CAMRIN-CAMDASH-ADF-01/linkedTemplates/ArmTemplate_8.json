{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CAMRIN-CAMDASH-ADF-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_ORDERS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CRIS No",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Exam Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Order Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Creation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Ref Src",
						"type": "varchar"
					},
					{
						"name": "Referrer",
						"type": "varchar"
					},
					{
						"name": "Lead Clinician",
						"type": "varchar"
					},
					{
						"name": "Required Date",
						"type": "varchar"
					},
					{
						"name": "Required Time",
						"type": "varchar"
					},
					{
						"name": "Order Id",
						"type": "varchar"
					},
					{
						"name": "Order Source",
						"type": "varchar"
					},
					{
						"name": "Episode No",
						"type": "varchar"
					},
					{
						"name": "Order Type",
						"type": "varchar"
					},
					{
						"name": "Examination",
						"type": "varchar"
					},
					{
						"name": "Urg",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_ORDERS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_PATIENTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CRIS No",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Creation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Mutation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DOB",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DOD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Ethnic Origin",
						"type": "varchar"
					},
					{
						"name": "GP",
						"type": "varchar"
					},
					{
						"name": "No of Attends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "No of Events",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ref Src",
						"type": "varchar"
					},
					{
						"name": "Postcode L",
						"type": "varchar"
					},
					{
						"name": "Postcode R",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Referrer Name",
						"type": "varchar"
					},
					{
						"name": "Age at Event",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HIS ID",
						"type": "varchar"
					},
					{
						"name": "CCG",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_PATIENTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_PATIENTS2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CRIS No",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Creation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Mutation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DOB",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DOD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Ethnic Origin",
						"type": "varchar"
					},
					{
						"name": "GP",
						"type": "varchar"
					},
					{
						"name": "No of Attends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "No of Events",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ref Src",
						"type": "varchar"
					},
					{
						"name": "Postcode L",
						"type": "varchar"
					},
					{
						"name": "Postcode R",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Referrer Name",
						"type": "varchar"
					},
					{
						"name": "Age at Event",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HIS ID",
						"type": "varchar"
					},
					{
						"name": "CCG",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_PATIENTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_PTL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Event Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Exam Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CRIS Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status Category",
						"type": "varchar"
					},
					{
						"name": "Referrer",
						"type": "varchar"
					},
					{
						"name": "Ref Src",
						"type": "varchar"
					},
					{
						"name": "Referring Location",
						"type": "varchar"
					},
					{
						"name": "Examination",
						"type": "varchar"
					},
					{
						"name": "Site",
						"type": "varchar"
					},
					{
						"name": "Request Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Booked Time",
						"type": "varchar"
					},
					{
						"name": "Booked Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Ref Src2",
						"type": "varchar"
					},
					{
						"name": "Postcode L",
						"type": "varchar"
					},
					{
						"name": "Postcode R",
						"type": "varchar"
					},
					{
						"name": "Creation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Key2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Attended",
						"type": "varchar"
					},
					{
						"name": "Modality",
						"type": "varchar"
					},
					{
						"name": "Room",
						"type": "varchar"
					},
					{
						"name": "RC",
						"type": "varchar"
					},
					{
						"name": "Urg",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Referrer Name",
						"type": "varchar"
					},
					{
						"name": "Exam Name",
						"type": "varchar"
					},
					{
						"name": "Event Date2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Days Waiting",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Predicted Reset Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Waiting Time Reset Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Weeks Waiting",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Planned Appointment Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Waiting Breach Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Was Planned",
						"type": "varchar"
					},
					{
						"name": "Was Scheduled",
						"type": "varchar"
					},
					{
						"name": "Was Waiting",
						"type": "varchar"
					},
					{
						"name": "CCG",
						"type": "varchar"
					},
					{
						"name": "D Status",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_PTL"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_REPO_META')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Event Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Report Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Exam Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Event Key2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Referral Source",
						"type": "varchar"
					},
					{
						"name": "Event Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Time",
						"type": "varchar"
					},
					{
						"name": "Date of First Addendnum",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date First Verified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date of Last Addendnum",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date Last Verified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date Reported",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date Typed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Reported by",
						"type": "varchar"
					},
					{
						"name": "Reported by2",
						"type": "varchar"
					},
					{
						"name": "Reported by2 Name",
						"type": "varchar"
					},
					{
						"name": "Reported by Name",
						"type": "varchar"
					},
					{
						"name": "Typed by",
						"type": "varchar"
					},
					{
						"name": "Typed by Name",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_REPORT_META"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_REPO_TAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Accession",
						"type": "varchar"
					},
					{
						"name": "Event Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Exam Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Report Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Request Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Time",
						"type": "varchar"
					},
					{
						"name": "Lead Clinician",
						"type": "varchar"
					},
					{
						"name": "Referrer",
						"type": "varchar"
					},
					{
						"name": "Referring Locat",
						"type": "varchar"
					},
					{
						"name": "Site",
						"type": "varchar"
					},
					{
						"name": "Examination",
						"type": "varchar"
					},
					{
						"name": "Exam Name",
						"type": "varchar"
					},
					{
						"name": "Event Key2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status Code",
						"type": "varchar"
					},
					{
						"name": "Intended Radiologist",
						"type": "varchar"
					},
					{
						"name": "Ref Src",
						"type": "varchar"
					},
					{
						"name": "Modality",
						"type": "varchar"
					},
					{
						"name": "Date First Addended",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date First Verified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date Last Addended",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date LAst Verified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date Reported",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Date Typed",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "First Addended By",
						"type": "varchar"
					},
					{
						"name": "First Addended by Name",
						"type": "varchar"
					},
					{
						"name": "First Verified By",
						"type": "varchar"
					},
					{
						"name": "First Verified By Name",
						"type": "varchar"
					},
					{
						"name": "Last Addended By",
						"type": "varchar"
					},
					{
						"name": "Last Addended By Name",
						"type": "varchar"
					},
					{
						"name": "Last Verified By",
						"type": "varchar"
					},
					{
						"name": "Last Verified By Name",
						"type": "varchar"
					},
					{
						"name": "Reported By",
						"type": "varchar"
					},
					{
						"name": "Reported By2",
						"type": "varchar"
					},
					{
						"name": "Reported By Name",
						"type": "varchar"
					},
					{
						"name": "Reported By2 Name",
						"type": "varchar"
					},
					{
						"name": "First Verified Time",
						"type": "varchar"
					},
					{
						"name": "Last Verified Time",
						"type": "varchar"
					},
					{
						"name": "Time Reported",
						"type": "varchar"
					},
					{
						"name": "Time Typed",
						"type": "varchar"
					},
					{
						"name": "Typed By",
						"type": "varchar"
					},
					{
						"name": "Attend to First Verified Days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Attend to Reported Days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_REPORTING_TAT"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_REQUESTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Accession",
						"type": "varchar"
					},
					{
						"name": "Exam Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Event Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Urg",
						"type": "varchar"
					},
					{
						"name": "Ref Src",
						"type": "varchar"
					},
					{
						"name": "Referring Locat",
						"type": "varchar"
					},
					{
						"name": "Referrer",
						"type": "varchar"
					},
					{
						"name": "Lead Clinician",
						"type": "varchar"
					},
					{
						"name": "Site",
						"type": "varchar"
					},
					{
						"name": "Request Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Event Time",
						"type": "varchar"
					},
					{
						"name": "On Call",
						"type": "varchar"
					},
					{
						"name": "PT",
						"type": "varchar"
					},
					{
						"name": "RC",
						"type": "varchar"
					},
					{
						"name": "Examination",
						"type": "varchar"
					},
					{
						"name": "Examination Name",
						"type": "varchar"
					},
					{
						"name": "Required Clinician",
						"type": "varchar"
					},
					{
						"name": "Status Code",
						"type": "varchar"
					},
					{
						"name": "Booked Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Booked Time",
						"type": "varchar"
					},
					{
						"name": "Event Key2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Creation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Attended",
						"type": "varchar"
					},
					{
						"name": "Referrer Name",
						"type": "varchar"
					},
					{
						"name": "Modality",
						"type": "varchar"
					},
					{
						"name": "Event Date at Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Predicted Reset Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Waiting Time Reset Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Planned Appointment Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Waiting Time Breach Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_REQUESTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_STATUSES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Exam Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Event Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Accession",
						"type": "varchar"
					},
					{
						"name": "Referrer",
						"type": "varchar"
					},
					{
						"name": "Referral Location",
						"type": "varchar"
					},
					{
						"name": "Referral Source",
						"type": "varchar"
					},
					{
						"name": "Urg",
						"type": "varchar"
					},
					{
						"name": "Site",
						"type": "varchar"
					},
					{
						"name": "Status Code",
						"type": "varchar"
					},
					{
						"name": "Status Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status Time",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Referral Location Name",
						"type": "varchar"
					},
					{
						"name": "Referral Source Name",
						"type": "varchar"
					},
					{
						"name": "Referral Name",
						"type": "varchar"
					},
					{
						"name": "Examination Name",
						"type": "varchar"
					},
					{
						"name": "Modality",
						"type": "varchar"
					},
					{
						"name": "Status Code at State Date",
						"type": "varchar"
					},
					{
						"name": "D Status",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_STATUSES"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_TEST_PAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RADFYF01_CRIS_PostgreSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CRIS No",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Creation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Mutation Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Surname",
						"type": "varchar"
					},
					{
						"name": "Forename",
						"type": "varchar"
					},
					{
						"name": "Stat Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FYF_ODBC_TEST_Patients"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Status')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "camdashdevtest101",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Status Code",
						"type": "nvarchar"
					},
					{
						"name": "Status ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Status Category",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dev",
					"table": "Status"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tat_Type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "camdashdevtest101",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Tat Type",
						"type": "nvarchar"
					},
					{
						"name": "Tat Type ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Target",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dev",
					"table": "Tat Type"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trust')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "camdashdevtest101",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Trust Name",
						"type": "nvarchar"
					},
					{
						"name": "Trust ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trust Name Group",
						"type": "nvarchar"
					},
					{
						"name": "Trust Name Group2",
						"type": "nvarchar"
					},
					{
						"name": "Trust Name Group3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dev",
					"table": "Trust"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_NIDC_Asset_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest_NIDC_IT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nicd-asset-22//NIDC_Asset_file.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Asset_IT1"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS_Upgrade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS_Upgrade",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS1_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS1_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS1_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS1_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS1_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS1_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS1_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS1_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS1_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS1_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS2_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS2_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS2_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS2_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS2_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS2_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS2_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS2_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PACS2_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PACS2_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS_Upgrade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS_Upgrade",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS1_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS1_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS1_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS1_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS1_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS1_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS1_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS1_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS1_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS1_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS2_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS2_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS2_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS2_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS2_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS2_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS2_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS2_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS2_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS2_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS3_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS3_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS3_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS3_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS3_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS3_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS3_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS3_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS3_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS3_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS4_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS4_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS4_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS4_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS4_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS4_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS4_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS4_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RIS4_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS4_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC_Upgrade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC_Upgrade",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC1_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC1_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC1_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC1_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC1_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC1_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC1_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC1_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC1_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC1_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC2_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC2_Site_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC2_Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC2_Manufacturer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC2_Version",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC2_Version",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC2_Implementation_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC2_Implementation_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OC2_Renewal_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OC2_Renewal_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AI_DS_System",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AI_DS_System",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AI_DS_System_Used_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AI_DS_System_Used_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AI_DS_System_Used_Freetext_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AI_DS_System_Used_Freetext_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Trialing_AI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trialing_AI",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Trialing_AI_Used",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trialing_AI_Used",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CDS_Referrers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDS_Referrers",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Percent_Paper_Requests",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Percent_Paper_Requests",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Online_Appointment_Access",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Online_Appointment_Access",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Online_Results_Access",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Online_Results_Access",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "All_Referrers_Elec_Results",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "All_Referrers_Elec_Results",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Joint_Procurement",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Joint_Procurement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Out_of_Hours_Rep",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Out_of_Hours_Rep",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Specialist_Reporting",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Specialist_Reporting",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Backlog_Reporting",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Backlog_Reporting",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Shared_booking_/_Workload_Leveling",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Shared_booking_/_Workload_Leveling",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Interventional_Radiology",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Interventional_Radiology",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Out_of_hours_on_call_Scanning",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Out_of_hours_on_call_Scanning",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Home_Reporting_Workstations",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home_Reporting_Workstations",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Reporting_workstations_on_Trust_premises",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reporting_workstations_on_Trust_premises",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Nuclear_Medicine_Workstation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nuclear_Medicine_Workstation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Total_Number_of_Workstations",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Number_of_Workstations",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Number_of_workstations_at_CDC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number_of_workstations_at_CDC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "_Image_Exchange_Portal_Use?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "_Image_Exchange_Portal_Use?",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Share_Within_Network",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Share_Within_Network",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Share_Patient_History_network",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Share_Patient_History_network",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "share_images_within_network",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "share_images_within_network",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "share_reports_with_network",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "share_reports_with_network",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "report_for_any_trust_network",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "report_for_any_trust_network",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "use_ERostering",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "use_ERostering",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ERostering_staff_Groups",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ERostering_staff_Groups",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Admin_and_clerical",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Admin_and_clerical",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Managerial_and_IT/PACS_team",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Managerial_and_IT/PACS_team",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Imaging_practitioners",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Imaging_practitioners",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Clinical_Support_staff",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Clinical_Support_staff",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Nursing_Staff",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nursing_Staff",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Medical_Staff",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medical_Staff",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Medical_physics_staff",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medical_physics_staff",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "other_staff_group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "other_staff_group",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "level_of_attainment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "level_of_attainment",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Asset_22_IT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Asset_IT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest_NIDC_MES",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest_NIDC_IT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Managed_Equipment_Service_Contract ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Managed_Equipment_Service_Contract ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Contract_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Contract_Number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Supplier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Supplier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Contract_Start_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Contract_Start_Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Contract_End_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Contract_End_Date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Initial_Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Initial_Cost",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Interest_Rate (%)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Interest_Rate (%)",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Consumables_included?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Consumables_included?",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Accessories Included? ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Accessories Included? ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MES1_Maintenance_Included?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES1_Maintenance_Included?",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plain_X-Ray_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plain_X-Ray_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CT_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CT_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MRI_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRI_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ultrasound_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ultrasound_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DEXA_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEXA_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Nuclear_Medicine_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Nuclear_Medicine_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fluoroscopy_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fluoroscopy_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Interventional_Radiology_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Interventional_Radiology_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mammography_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mammography_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Catheter_Laboratory_Depreciation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Catheter_Laboratory_Depreciation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Asset_22_MES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Asset_MES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest_NIDC_Asset_Spec",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest_NIDC_MES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NIDC_Asset_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NIDC_Asset_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Local_Identifier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Local_Identifier",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Trust_Site_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust_Site_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RIS_Room_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RIS_Room_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Machine_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Machine_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Equipment_Detail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Equipment_Detail",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Manufacturer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Manufacturer",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "First_In_Service_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "First_In_Service_Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Age_of_Machine",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Age_of_Machine",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Planned_Replacement_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Planned_Replacement_Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Asset_Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Asset_Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Installation_Replacement_Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Installation_Replacement_Status",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Asset_22_Spec",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Asset_Spec",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest_NIDC_Asset_Avail",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest_NIDC_Asset_Spec",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Local_Identifier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Local_Identifier",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Room_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Room_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Equipment_Detail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Equipment_Detail",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Avg_core_staffed_operational_hours_Weekday",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Avg_core_staffed_operational_hours_Weekday",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Main_use_core_hours_Weekday",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Main_use_core_hours_Weekday",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "avg_OOHs_Weekday",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avg_OOHs_Weekday",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Avg_core_staffed_operational_hours_Sat",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Avg_core_staffed_operational_hours_Sat",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Main_use_core_hours_Sat",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Main_use_core_hours_Sat",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "avg_OOHs_Sat",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avg_OOHs_Sat",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Avg_core_staffed_operational_hours_Sun",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Avg_core_staffed_operational_hours_Sun",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Main_use_core_hours_Sun",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Main_use_core_hours_Sun",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "avg_OOHs_Sun",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "avg_OOHs_Sun",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Research",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Research",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Avg_Research_Hours_per_week",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Avg_Research_Hours_per_week",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unscheduled_downtime_12M",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unscheduled_downtime_12M",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Asset_22_Avail",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Asset_Avail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest_NIDC_Asset_Cost",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest_NIDC_Asset_Avail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Local_Identifier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Local_Identifier",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Room_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Room_Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Equipment_Detail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Equipment_Detail",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ownership_Structure",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ownership_Structure",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MES_Contract__Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES_Contract__Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Asset_managed_Imaging_department",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Asset_managed_Imaging_department",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ownership_accounted_for",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ownership_accounted_for",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Capital_Purchase_Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Capital_Purchase_Cost",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Annual_Revenue_Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Revenue_Cost",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Annual_20/21_Maintenance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_20/21_Maintenance",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Included_in_Annual_Cost?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Included_in_Annual_Cost?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Maintenance_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Maintenance_Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type_of_Cover",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type_of_Cover",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Non_Accidental_Replacement_Parts_included?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Non_Accidental_Replacement_Parts_included?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Level_of_Maintenance_Cover",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level_of_Maintenance_Cover",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Seven_Day_Cover_",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Seven_Day_Cover_",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Maintenance_cover_negotiated_at_the_point_of_sale",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Maintenance_cover_negotiated_at_the_point_of_sale",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Service_Contract_Start_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_Contract_Start_Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Service_Contract_End_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service_Contract_End_Date",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Asset_22_Cost",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Asset_Cost",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-31T13:52:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_NIDC_Workforce_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Breast_ScreenAFC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_Breast_ScreenAFC"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": " Substantive Pay Costs(£)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Substantive Pay Costs(£)",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Extra Duty Payments (£)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Extra Duty Payments (£)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vacancies",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vacancies",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Bank & Agency Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bank & Agency Headcount",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_Breast_ScreenAFC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_Breast_ScreenAFC",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Breast_ScreenMedStaff",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Breast_ScreenAFC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ScreenMedStaff"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Substantive Pay Costs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Substantive Pay Costs",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Extra Duty Payments(£)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Extra Duty Payments(£)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Bank & Agency (FTE)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bank & Agency (FTE)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Bank & Agency Pay Costs (£)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bank & Agency Pay Costs (£)",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_Breast_ScreenMedStaff",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ScreenMedStaff",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Breast_ScreenTraining",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Breast_ScreenMedStaff",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_Breast_ScreenTraining"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount Formal Qualification",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount Formal Qualification",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount - Local competency based ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount - Local competency based",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_Breast_ScreenTraining",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_Breast_ScreenTraining",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Breast_ScreenPlacements",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Breast_ScreenTraining",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_Breast_ScreenPlacements"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 1 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 1 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 2 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 2 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 3 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 3 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 4 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 4 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 5 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 5 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 6 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 6 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_Breast_ScreenPlacements",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_Breast_ScreenPlacements",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Breast_ScreenLeavers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Breast_ScreenPlacements",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_Breast_ScreenLeavers"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Members Left Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Members Left Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Members Promoted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Members Promoted",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Members left breast screening",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Members left breast screening",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_Breast_ScreenLeavers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_Breast_ScreenLeavers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffRet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Breast_ScreenLeavers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffRet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount  Permanent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount  Permanent",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount  Internal/external  Bank",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount  Internal/external  Bank",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffRet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffRet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffFTE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffRet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffFTE"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffFTE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffFTE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffVac",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffFTE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffVac"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffVac",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffVac",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffSkillmix",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffVac",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffSkillmix"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffSkillmix",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffSkillmix",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffReportingPercentage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffSkillmix",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffReportingPercentage"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Percentage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Percentage",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffReportingPercentage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffReportingPercentage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffJobPlan",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffReportingPercentage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffJobPlan"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Consultant\nRadiographer ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Consultant Radiographer",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Advanced \nPractitioner\n",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Advanced \nPractitioner\n",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Consultant \nSonographer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Consultant Sonographer",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Advanced Practitioner - Sonographer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Advanced Practitioner - Sonographer",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Consultant Mammographer - Symptomatic",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Consultant Mammographer - Symptomatic",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Advanced Practitioner – Mammographer ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Advanced Practitioner – Mammographer",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Reporting \nRadiographer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reporting Radiographer",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffJobPlan",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffJobPlan",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffNonClinicalPercentage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffJobPlan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffNonClinicalPercentage"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Percentage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Percentage",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffNonClinicalPercentage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffNonClinicalPercentage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffNonClinicalDuties",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffNonClinicalPercentage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffNonClinicalDuties"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Y/N",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Y/N",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffNonClinicalDuties",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffNonClinicalDuties",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffMedical",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffNonClinicalDuties",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffMedical"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Pay Costs (£)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pay Costs (£)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DCC - Reporting",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DCC - Reporting",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DCC - MDT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DCC - MDT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DCC - Other Clinical Activities",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DCC - Other Clinical Activities",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SPA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SPA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SPA - Imaging Network",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SPA - Imaging Network",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "REALM / Governance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "REALM / Governance",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffMedical",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffMedical",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffClinSpec",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffMedical",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffClinSpec"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FTE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffClinSpec",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffClinSpec",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffSickness",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffClinSpec",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffSickness"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ClinicalStaffSick",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClinicalStaffSick",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NonClinicalStaffSick",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NonClinicalStaffSick",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffSickness",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffSickness",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffPostgradLearning",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffSickness",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffPostgradLearning"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Training cat",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Training cat",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount Formal Quals",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount Formal Quals",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Headcount - Local competency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount Local competency",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffPostgradLearning",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffPostgradLearning",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffClinTrainingPlacement",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffPostgradLearning",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffClinTrainingPlacement"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 1 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 1 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 2 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 2 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 3 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 3 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 4 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 4 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 5 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 5 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year 6 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year 6 Students Annual Headcount",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffClinTrainingPlacement",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffClinTrainingPlacement",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffLeavers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffClinTrainingPlacement",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffLeavers"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "staff members left",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "staff members left",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "staff members  promoted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "staff members  promoted",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "staff members moved within the trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "staff members moved within the trust",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffLeavers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffLeavers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SubStaffOvernightWeekends",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffLeavers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_SubStaffOvernightWeekends"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of staff on site (Weekday night)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of staff on site (Weekday night)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of staff on site (weekend night)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of staff on site (weekend night)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of staff on site (weekend day)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of staff on site (weekend day)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of staff on call (Weekday night)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of staff on call (Weekday night)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of staff on call (weekend night)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of staff on call (weekend night)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Number of staff on call (weekend day)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Number of staff on call (weekend day)",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_SubStaffOvernightWeekends",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_SubStaffOvernightWeekends",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyCovidTemp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SubStaffOvernightWeekends",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyCovidTemp"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COVID Agency/ locum Head Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COVID Agency/ locum Head Count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COVID Bank External Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COVID Bank External Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COVID Bank Internal Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COVID Bank Internal Headcount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Total temporary pay costs for COVID temporary Staffing (£)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total temporary pay costs for COVID temporary Staffing (£)",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyCovidTemp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyCovidTemp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyLocum",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyCovidTemp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyLocum"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyLocum",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyLocum",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyExternal",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyLocum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyExternal"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyExternal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyExternal",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyInternal",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyExternal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyInternal"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyInternal",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyInternal",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyOvertime",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyInternal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyOvertime"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyOvertime",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyOvertime",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyVolCost",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyOvertime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyVolCost"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Of Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Volume",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Volume",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyVolCost",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyVolCost",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AgencyInsource",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyVolCost",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_AgencyInsource"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Activity Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Activity Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Volume",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Volume",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_AgencyInsource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_AgencyInsource",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OutsourceVolume",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AgencyInsource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_OutsourceVolume"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count Method",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count Method",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Activity Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Activity Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Volume",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Volume",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_OutsourceVolume",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_OutsourceVolume",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OutsourceProv",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OutsourceVolume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_OutsourceProv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Provider",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Provider",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_OutsourceProv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_OutsourceProv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NPC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "OutsourceProv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_NPC"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Interventional Consumables spend?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Interventional Consumables spend?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "separate Interventional consumables spend?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "separate Interventional consumables spend?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Equipment and Maintenance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Equipment and Maintenance",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Contrast Media",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contrast Media",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Isotopes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Isotopes",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Medicines",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medicines",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Consumables",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Consumables",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Interventional Radiology Consumables",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Interventional Radiology Consumables",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Logistics",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Logistics",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Estates",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Estates",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PbR Excluded Device / PbR Drugs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PbR Excluded Device / PbR Drugs",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Training",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Training",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Radiology Academy Costs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Radiology Academy Costs",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "IT / PACS / RIS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IT / PACS / RIS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Exams / patients referred out to other NHS trusts",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Exams / patients referred out to other NHS trusts",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Medical physics services",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medical physics services",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other / Not known",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other / Not known",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Community Diagnostic Centre Non Pay Costs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Community Diagnostic Centre Non Pay Costs",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Ionising Radiation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Ionising Radiation",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA MRI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA MRI",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Mammography",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Mammography",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Ultrasound",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Ultrasound",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Nuclear Medicine",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Nuclear Medicine",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Lasers and UV ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Lasers and UV",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA PACS Reporting Workstations ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA PACS Reporting Workstations",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Other",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Other",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Ionising Radiation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Ionising Radiation",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC MRI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC MRI",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Mammography",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Mammography",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Ultrasound",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Ultrasound",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Nuclear Medicine",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Nuclear Medicine",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Lasers and UV ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Lasers and UV",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC PACS Reporting Workstations ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC PACS Reporting Workstations",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Other",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Other",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Radiation Protection Adviser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Radiation Protection Adviser",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Radioactive Waste Adviser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Radioactive Waste Adviser",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Laser Protection Adviser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Laser Protection Adviser",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA Medical Physics Expert",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA Medical Physics Expert",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TA MR Safety Expert",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TA MR Safety Expert",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Radiation Protection Adviser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Radiation Protection Adviser",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Radioactive Waste Adviser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Radioactive Waste Adviser",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Laser Protection Adviser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Laser Protection Adviser",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC Medical Physics Expert",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC Medical Physics Expert",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CDC MR Safety Expert",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CDC MR Safety Expert",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PbR Excluded Device / Drugs",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PbR Excluded Device / Drugs",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Diagnostic Imaging - Outpatient Income (Block Contract)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic Imaging - Outpatient Income (Block Contract)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Diagnostic Imaging - Outpatient Income (Tariff)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic Imaging - Outpatient Income (Tariff)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Diagnostic Imaging - Direct Access Activity (Block Contract)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic Imaging - Direct Access Activity (Block Contract)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Diagnostic Imaging - Direct Access Activity (Tariff)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic Imaging - Direct Access Activity (Tariff)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Diagnostic Imaging - Inpatient Activity Income",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic Imaging - Inpatient Activity Income",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Referrals from other NHS Providers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Referrals from other NHS Providers",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Income from Non-NHS organisations",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Income from Non-NHS organisations",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Income for Clinical Trainee Placements",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Income for Clinical Trainee Placements",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Income for Training of Substantive Staff",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Income for Training of Substantive Staff",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Income",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Income",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_NPC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_NPC",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NPCSavings",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NPC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_NPCSavings"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Saving Group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Saving Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type of Savings",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type of Savings",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Saving",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Saving",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_NPCSavings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_NPCSavings",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityRequests",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NPCSavings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityRequests"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Source",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityRequests",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityRequests",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityProtocol",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivityRequests",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityProtocol"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Musculoskeletal (MSK) MRI imaging",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Musculoskeletal (MSK) MRI imaging",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Neuro MRI imaging",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Neuro MRI imaging",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Breast MRI imaging",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Breast MRI imaging",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CT Colonography imaging",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CT Colonography imaging",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Ultrasound Vetting processes and appointment times ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ultrasound Vetting processes and appointment times",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Protocol 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Protocol 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Service Delivered 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service Delivered 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Protocol 2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Protocol 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Service Delivered 2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service Delivered 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Protocol 3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Protocol 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Service Delivered 3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Service Delivered 3",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityProtocol",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityProtocol",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityPathway",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivityProtocol",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityPathway"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Multiparametric Prostate MRI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Multiparametric Prostate MRI",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cauda Equina MRI ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cauda Equina MRI",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CE_Operational Hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CE_Operational Hours",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mechanical Thrombectomy procedures ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mechanical Thrombectomy procedures",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MT_Operational Hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MT_Operational Hours",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityPathway",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityPathway",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityIA",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivityPathway",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityIA"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityIA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityIA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityRep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivityIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityRep"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Staff Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityRep",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityRep",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivitySpecialRep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivityRep",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//NIDC_Workforce.xlsx"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivitySpecialRep"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Reporter type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reporter type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Chest X-ray",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chest X-ray",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CT Head",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CT Head",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CT Colonography",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CT Colonography",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MRI SPINES",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRI SPINES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MRI KNEES",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRI KNEES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MRI HEAD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRI HEAD",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivitySpecialRep",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivitySpecialRep",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityHDRep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivitySpecialRep",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityHDRep"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Radiographers Job Plan Home Report",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Radiographers Job Plan Home Report",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Radiologist Job Plan Home Report",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Radiologist Job Plan Home Report",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Home Report Annual Pas",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home Report Annual Pas",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Average Radiographer Rostered Home Report Hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Average Radiographer Rostered Home Report Hours",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Orthopaedic review of images in fracture clinic?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Orthopaedic review of images in fracture clinic?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ICU Review - Chest X-ray for line position and changes in lung pathology?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ICU Review - Chest X-ray for line position and changes in lung pathology?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dental review - Orthopantomogram (OPG)?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dental review - Orthopantomogram (OPG)?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Acute Medicine doctor performing and reporting a point of care ultrasound",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Acute Medicine doctor performing and reporting a point of care ultrasound",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cardiologist reporting MRI / CT Cardiac Images?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiologist reporting MRI / CT Cardiac Images?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Orthopaedic Theatre Fluoro Images?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Orthopaedic Theatre Fluoro Images?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Rheumatology follow up images?",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rheumatology follow up images?",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ERCP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ERCP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Speech and Language Therapists report Video Swallows",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Speech and Language Therapists report Video Swallows",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Imported images for review",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Imported images for review",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cardiac Pacemaker insertions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac Pacemaker insertions",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Deceased patient studies",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Deceased patient studies",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Urology Reporting",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Urology Reporting",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Neonatal Ultrasound",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Neonatal Ultrasound",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityHDRep",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityHDRep",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ActivityKPI",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ActivityHDRep",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "nidc-workforce-22//"
							},
							{
								"name": "Destination",
								"value": "dbo.NIDC_Workforce_ActivityKPI"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Trust",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Modality",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "95th Percentile Request to Report Issued",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "95th Percentile Request to Report Issued",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "95th Percentile Exam to Report Issued",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "95th Percentile Exam to Report Issued",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Report outstanding > 10 days",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Report outstanding > 10 days",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Report outstanding > 30 days",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Report outstanding > 30 days",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Percentage of appointments not attended by patient",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Percentage of appointments not attended by patient",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_NIDC_Workforce_22_ActivityKPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NIDC_Workforce_ActivityKPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T10:55:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move from ICB to CAMRIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move to DEV_TEST",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [Unify].[NAT_DM01]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CM_Sql_Unify_NAT_DM01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CAMRIN_Unify_DM01",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Move to PROD",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move to DEV_TEST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [Unify].[NAT_DM01]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CM_Sql_Unify_NAT_DM01",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PROD_Unity_DM01",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Unify"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-23T11:22:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActDem')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "FYF_ODBC_CORE_v2",
								"type": "DatasetReference"
							},
							"name": "Core"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Act_Dem",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "CreateDNAColumn"
						},
						{
							"name": "GroupbyEvent"
						},
						{
							"name": "GroupbyRequest"
						},
						{
							"name": "RenameDate1"
						},
						{
							"name": "RenameDate2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "aggregate2"
						},
						{
							"name": "join2"
						},
						{
							"name": "join3"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {CRIS No} as integer,",
						"          Accession as string,",
						"          {Ref Src} as string,",
						"          Site as string,",
						"          {Request Date} as date,",
						"          {Event Date} as date,",
						"          {Event Time} as string,",
						"          {On Call} as string,",
						"          PT as string,",
						"          Examination as string,",
						"          {Exam Name} as string,",
						"          Room as string,",
						"          {ExamSite Code} as string,",
						"          {Start Time} as string,",
						"          {End Time} as string,",
						"          {Exam Key} as integer,",
						"          {Event Key} as integer,",
						"          {Status Code} as string,",
						"          {Booked Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Creation Date} as timestamp,",
						"          Attended as string,",
						"          Urg as string,",
						"          Modality as string,",
						"          {No of Proc} as integer,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Date First Verified} as timestamp,",
						"          {Time First Verified} as string,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          {Status Time} as string,",
						"          Modality2 as string,",
						"          {Trust Name} as string,",
						"          Patient_Type as string,",
						"          {Tat Type} as string,",
						"          {Status Time2} as string,",
						"          {Patient Type ID} as long,",
						"          {Modality ID} as integer,",
						"          {Status ID} as integer,",
						"          {Exam ID} as integer,",
						"          {Exam Room ID} as integer,",
						"          {Trust ID} as integer,",
						"          {Referral Source ID} as integer,",
						"          {Tat Type ID} as integer,",
						"          {Reported By} as string,",
						"          Rank as integer,",
						"          {Status Date} as timestamp,",
						"          Activity as integer,",
						"          {Count of Activty_Demand for Activity} as long,",
						"          {Stat Date} as timestamp,",
						"          {Age At Event} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Core",
						"MapDrifted1 derive(DNA = iif({Status Code}==\"CPDNA\", 1, iif({Status Code}==\"APDNA\", 1, 0))) ~> CreateDNAColumn",
						"CreateDNAColumn aggregate(groupBy({Event Date},",
						"          {Modality ID},",
						"          {Trust ID}),",
						"     Activity = sum(Activity),",
						"          DNA = sum(DNA)) ~> GroupbyEvent",
						"CreateDNAColumn aggregate(groupBy({Request Date},",
						"          {Modality ID},",
						"          {Trust ID}),",
						"     Demand = count(Activity)) ~> GroupbyRequest",
						"GroupbyRequest select(mapColumn(",
						"          Date = {Request Date},",
						"          {Modality ID},",
						"          {Trust ID},",
						"          Demand",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameDate1",
						"GroupbyEvent select(mapColumn(",
						"          Date = {Event Date},",
						"          {Modality ID},",
						"          {Trust ID},",
						"          Activity,",
						"          DNA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameDate2",
						"RenameDate1 derive(Date = toDate(toString(Date)),",
						"          ID = concat(left(toString(Date),10), concat(toString({Modality ID}), toString({Trust ID})))) ~> derivedColumn1",
						"RenameDate2 derive(Date = toDate(toString(Date)),",
						"          ID = concat(left(toString(Date),10), concat(toString({Modality ID}), toString({Trust ID})))) ~> derivedColumn2",
						"filter2, derivedColumn2 join(derivedColumn1@ID == derivedColumn2@ID,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 derive(Date = iifNull(derivedColumn1@Date,derivedColumn2@Date),",
						"          {Modality ID} = iifNull(RenameDate1@{Modality ID},RenameDate2@{Modality ID}),",
						"          {Trust ID} = iifNull(RenameDate1@{Trust ID},RenameDate2@{Trust ID}),",
						"          ID = iifNull(derivedColumn1@ID, derivedColumn2@ID)) ~> derivedColumn3",
						"derivedColumn4 select(mapColumn(",
						"          Date,",
						"          {Modality ID},",
						"          {Trust ID},",
						"          Demand,",
						"          ID,",
						"          Activity,",
						"          DNA,",
						"          Month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn3 derive(Month = addMonths(addDays(lastDayOfMonth(Date),1),-1)) ~> derivedColumn4",
						"derivedColumn4 aggregate(groupBy({Modality ID},",
						"          {Trust ID},",
						"          Month),",
						"     {Monthly Activity Sum} = sum(Activity),",
						"          {Monthly Demand Sum} = sum(Demand)) ~> aggregate1",
						"aggregate1 aggregate(groupBy({Modality ID},",
						"          {Trust ID},",
						"          Month),",
						"     {Monthly Demand Max} = iif(max({Monthly Demand Sum})>max({Monthly Activity Sum}), max({Monthly Demand Sum}), max({Monthly Activity Sum}))) ~> aggregate2",
						"aggregate2, aggregate1 join(aggregate2@{Modality ID} == aggregate1@{Modality ID}",
						"     && aggregate2@{Trust ID} == aggregate1@{Trust ID}",
						"     && aggregate2@Month == aggregate1@Month,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"select1, select2 join(select1@{Modality ID} == select2@{Modality ID}",
						"     && select1@{Trust ID} == select2@{Trust ID}",
						"     && select1@Month == select2@Month,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join3",
						"join2 select(mapColumn(",
						"          {Modality ID} = aggregate2@{Modality ID},",
						"          {Trust ID} = aggregate2@{Trust ID},",
						"          Month = aggregate2@Month,",
						"          {Monthly Demand Max},",
						"          {Monthly Activity Sum},",
						"          {Monthly Demand Sum}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"join3 select(mapColumn(",
						"          Date,",
						"          {Modality ID} = select1@{Modality ID},",
						"          {Trust ID} = select1@{Trust ID},",
						"          Demand,",
						"          ID,",
						"          Activity,",
						"          DNA,",
						"          Month = select1@Month,",
						"          {Monthly Demand Max},",
						"          {Monthly Activity Sum},",
						"          {Monthly Demand Sum}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"select3 derive(Year = year(Date),",
						"          DNARate = DNA/(Activity+DNA)) ~> derivedColumn5",
						"derivedColumn5 filter(isNull(ID)==false()) ~> filter1",
						"derivedColumn1 filter(isNull(ID)==false()) ~> filter2",
						"Core derive({CRIS No} = toInteger(byName('CRIS No')),",
						"          Accession = toString(byName('Accession')),",
						"          {Ref Src} = toString(byName('Ref Src')),",
						"          Site = toString(byName('Site')),",
						"          {Request Date} = toDate(byName('Request Date')),",
						"          {Event Date} = toDate(byName('Event Date')),",
						"          {Event Time} = toString(byName('Event Time')),",
						"          {On Call} = toString(byName('On Call')),",
						"          PT = toString(byName('PT')),",
						"          Examination = toString(byName('Examination')),",
						"          {Exam Name} = toString(byName('Exam Name')),",
						"          Room = toString(byName('Room')),",
						"          {ExamSite Code} = toString(byName('ExamSite Code')),",
						"          {Start Time} = toString(byName('Start Time')),",
						"          {End Time} = toString(byName('End Time')),",
						"          {Exam Key} = toInteger(byName('Exam Key')),",
						"          {Event Key} = toInteger(byName('Event Key')),",
						"          {Status Code} = toString(byName('Status Code')),",
						"          {Booked Date} = toTimestamp(byName('Booked Date')),",
						"          {Booked Time} = toString(byName('Booked Time')),",
						"          {Creation Date} = toTimestamp(byName('Creation Date')),",
						"          Attended = toString(byName('Attended')),",
						"          Urg = toString(byName('Urg')),",
						"          Modality = toString(byName('Modality')),",
						"          {No of Proc} = toInteger(byName('No of Proc')),",
						"          {Planned Appointment Date} = toTimestamp(byName('Planned Appointment Date')),",
						"          {Date First Verified} = toTimestamp(byName('Date First Verified')),",
						"          {Time First Verified} = toString(byName('Time First Verified')),",
						"          {Was Planned} = toString(byName('Was Planned')),",
						"          {Was Scheduled} = toString(byName('Was Scheduled')),",
						"          {Was Waiting} = toString(byName('Was Waiting')),",
						"          {Stat Date} = toTimestamp(byName('Stat Date')),",
						"          {Status Date} = toTimestamp(byName('Status Date')),",
						"          Modality2 = toString(byName('Modality2')),",
						"          {Trust Name} = toString(byName('Trust Name')),",
						"          Patient_Type = toString(byName('Patient_Type')),",
						"          {Tat Type} = toString(byName('Tat Type')),",
						"          Activity = toInteger(byName('Activity')),",
						"          {Count of Activty_Demand for Activity} = toLong(byName('Count of Activty_Demand for Activity')),",
						"          {Status Time2} = toString(byName('Status Time2')),",
						"          {Patient Type ID} = toLong(byName('Patient Type ID')),",
						"          {Modality ID} = toInteger(byName('Modality ID')),",
						"          {Status ID} = toInteger(byName('Status ID')),",
						"          {Exam ID} = toInteger(byName('Exam ID')),",
						"          {Exam Room ID} = toInteger(byName('Exam Room ID')),",
						"          {Trust ID} = toInteger(byName('Trust ID')),",
						"          {Referral Source ID} = toInteger(byName('Referral Source ID')),",
						"          {Tat Type ID} = toInteger(byName('Tat Type ID')),",
						"          {Reported By} = toString(byName('Reported By')),",
						"          Rank = toInteger(byName('Rank'))) ~> MapDrifted1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Activity as integer,",
						"          Date as date,",
						"          Demand as decimal(19,4),",
						"          ID as string,",
						"          {Modality ID} as string,",
						"          Month as string,",
						"          {Monthly Activity Sum} as integer,",
						"          {Monthly Demand Sum} as integer,",
						"          {Monthly Max} as integer,",
						"          {Trust ID} as string,",
						"          Years as string,",
						"          DNA as string,",
						"          DNARate as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Activity,",
						"          Date,",
						"          Demand,",
						"          ID,",
						"          {Modality ID},",
						"          Month,",
						"          {Monthly Activity Sum},",
						"          {Monthly Demand Sum},",
						"          {Monthly Max} = {Monthly Demand Max},",
						"          {Trust ID},",
						"          Years = Year,",
						"          DNA,",
						"          DNARate",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PopulateNewColumns')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "RequestRecievedStatus",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RequestRecievedStatus",
							"dataset": {
								"referenceName": "RequestRecievedStatus",
								"type": "DatasetReference"
							}
						},
						{
							"name": "AzureSqlCOREStageStep1",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSqlCOREStageStep1",
							"dataset": {
								"referenceName": "AzureSqlCOREStageStep1",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared RequestRecievedStatus = let AdfDoc = Sql.Database(\"camrinsql101.database.windows.net\", \"camdashdevtest101\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dev\",Item=\"RequestRecievedStatus\"]}[Data] in InputTable;\r\nshared AzureSqlCOREStageStep1 = let AdfDoc = Sql.Database(\"camrinsql101.database.windows.net\", \"camdashdevtest101\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dev\",Item=\"AzureSqlCOREStageStep1\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"AzureSqlCOREStageStep1\",\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"ExamSite Code\", \"Status Time\", \"Modality2\", \"Trust Name\", \"Patient_Type\", \"Tat Type\"}),\r\n  #\"Merged queries\" = Table.NestedJoin(#\"Removed columns\", {\"Exam Key\"}, Table.SelectRows(RequestRecievedStatus, each [Status Code] = \"RR\"), {\"Exam Key\"}, \"RequestRecievedStatus\", JoinKind.LeftOuter),\r\n  #\"Expanded RequestRecievedStatus 1\" = Table.ExpandTableColumn(#\"Merged queries\", \"RequestRecievedStatus\", {\"Status Code\", \"Status Date\", \"Status Time\"}, {\"Status Code.2\", \"Status Date.1\", \"Status Time\"}),\r\n  #\"Date Time Change\" = Table.TransformColumnTypes(#\"Expanded RequestRecievedStatus 1\", {{\"Request Date\", type date}, {\"Event Date\", type date}, {\"Status Time\", type text}}),\r\n  Modality = Table.TransformColumnTypes(Table.AddColumn(#\"Date Time Change\", \"Modality2\", each if [Modality] = \"R\" then \"Plain X-Ray\" else if [Modality] = \"A\" then \"IR\" else if [Modality] = \"B\" then \"Mammo\" else if [Modality] = \"C\" then \"CT\" else if[Modality] = \"M\" then \"MRI\" else if [Modality] = \"F\" then \"Fluoro\" else if [Modality] = \"U\" then \"NOUS\"  else if [Modality] = \"N\" then \"Nuc Med\" else if[Modality] = \"S\" then \"DEXA\" else if[Modality] = \"Z\" then \"Additional Workload\" else if[Modality] = \"H\" then \"Cardio\" else if[Modality] = \"D\" then \"Doppler\" else if[Modality] = \"E\" then \"Endo\" else if[Modality] = \"Y\" then \"Med Phys\" else if[Modality] = \"O\" then \"Obstetrics\" else \"other\"), {{\"Modality2\", type text}}),\r\n  Trust = Table.TransformColumnTypes(Table.AddColumn(Modality, \"Trust Name\", each if [Site] = \"5HA16\" then \"LUHFT\" else if [Site] = \"5NL93\" then \"LUHFT\" else if Text.Start([Site],3) = \"REM\" then \"LUHFT\" else if Text.Start([Site],3) = \"RQ6\" then \"LUHFT\" else if Text.Start([Site],3) = \"RBL\" then \"WUTH\" else if Text.Start([Site],3) = \"RBN\" then \"STHK\" else if Text.Start([Site],3) = \"RBQ\" then \"LHCH\" else if Text.Start([Site],3) = \"RBS\" then \"Alder Hey\" else if Text.Start([Site],3) = \"RBT\" then \"MCH\" else if Text.Start([Site],3) = \"REN\" then \"CCC\" else if Text.Start([Site],3) = \"REP\" then \"Womens\" else if Text.Start([Site],3) = \"RET\" then \"TWC\" else if Text.Start([Site],3) = \"RJR\" then \"COCH\" else if Text.Start([Site],3) = \"RVY\" then \"S&O\" else if Text.Start([Site],3) = \"RWW\" then \"WHH\" else [Site]), {{\"Trust Name\", type text}}),\r\n  #\"Patient Type\" = Table.TransformColumnTypes(Table.AddColumn(Trust, \"Patient_Type\", each if [PT] = \"A\" then \"In Patient\" else if [PT] = \"B\" then \"Out Patient\" else if [PT] = \"C\" then \"A&E Attender\" else if [PT] = \"D\" then \"Out Patient\" else if [PT] = \"E\" then \"Out Patient\" else if [PT] = \"F\" then \"Other\" else if [PT] = \"G\" then \"GP Direct Access Patient\"  else if [PT] = \"H\" then \"In Patient\" else if[PT] = \"J\" then \"A&E Attender\" else if[PT] = \"K\" then \"Tertiary Referral\" else if[PT] = \"N\" then \"In Patient\" else if[PT] = \"R\" then \"Research\" else if[PT] = \"T\" then \"Dental\" else if[Modality] = \"X\" then \"Other\" else \"Other\"), {{\"Patient_Type\", type text}}),\r\n  #\"Tat Type\" = Table.TransformColumnTypes(Table.AddColumn(#\"Patient Type\", \"Tat Type\", each if ([Modality2]=\"CT\" or [Modality2]=\"MRI\" or [Modality2]=\"Fluoro\" or [Modality2]=\"Nuc Med\" or [Modality2]=\"Dexa\") and (([PT]=\"A\" and [Urg]=\"5\") or [PT]=\"C\") then \"Urgent Inpatients\" else \r\n\r\nif ([Modality2]=\"CT\" or [Modality2]=\"MRI\" or [Modality2]=\"Fluoro\" or [Modality2]=\"Nuc Med\" or [Modality2]=\"Dexa\") and ([PT]=\"A\" and ([Urg]=\"1\" or [Urg]=\"3\")) then \"Non-Urgent Inpatients\" else  \r\n\r\nif ([Modality2]=\"CT\" or [Modality2]=\"MRI\" or [Modality2]=\"Plain X-Ray\" or [Modality2]=\"Fluoro\" or [Modality2]=\"Nuc Med\" or [Modality2]=\"Dexa\") and ([PT]=\"B\" or [PT]=\"G\") and [Urg]=\"7\" then \"Outpatient Faster Diagnosis Standard Cancer Pathway\" else \r\n\r\nif ([Modality2]=\"CT\" or [Modality2]=\"MRI\" or [Modality2]=\"Fluoro\" or [Modality2]=\"Nuc Med\" or [Modality2]=\"Dexa\") and ([PT]=\"B\" or [PT]=\"G\" or [PT]=\"D\") and ([Urg]=\"3\" or [Urg]=\"5\") then \"Urgent GP and Outpatients\" else \r\n\r\nif ([Modality2]=\"CT\" or [Modality2]=\"MRI\") and ([PT]=\"B\" or [PT]=\"G\" or [PT]=\"D\") and [Urg]=\"1\" then \"All Other Routine Outpatient and GP Studies\" else \r\n\r\nif [Modality2]=\"Plain X-Ray\" and ([PT]=\"A\" and ([Urg]=\"1\" or [Urg]=\"3\")) then \"Other Inpatients\" else \r\n\r\nif [Modality2]=\"Plain X-Ray\" and (([PT]=\"A\" and [Urg]=\"5\") or [PT]=\"C\") then \"Acutely Unwell/ED Patients\" else \r\n\r\nif [Modality2]=\"Plain X-Ray\" and ([PT]=\"B\" or [PT]=\"D\" or [PT]=\"G\") and ([Urg]=\"5\" or [Urg]=\"3\") then \"Urgent GP/Urgent Outpatients\" else \r\n\r\nif ([Modality2]=\"Plain X-Ray\" or [Modality2]=\"Fluoro\" or [Modality2]=\"Nuc Med\" or [Modality2]=\"Dexa\") and ([PT]=\"B\" or [PT]=\"D\" or [PT]=\"G\") and [Urg]=\"1\" then \"Routine GP and outpatients\" else  \r\n\r\nif [Modality2]=\"NOUS\" or [Modality2]=\"IR\" then \"Ultrasound and interventional Radiology\" else \"Other\"), {{\"Tat Type\", type text}}),\r\n  Activity = Table.TransformColumnTypes(Table.AddColumn(#\"Tat Type\", \"Activity.1\", each if([Status Code]=\"ASACK\" or [Status Code]=\"ASRMS\" or [Status Code]=\"ASRQS\" or [Status Code]=\"ATN\" or  [Status Code]=\"ATP\" or [Status Code]=\"CHBU\" or  [Status Code]=\"CHE\" or [Status Code]=\"CHEC\" or [Status Code]=\"CPC\" or [Status Code]=\"CPDNA\" or [Status Code]=\"CPMP\" or [Status Code]=\"CPPG\" or [Status Code]=\"CPPR\" or [Status Code]=\"CPR\" or [Status Code]=\"DVR\" or [Status Code]=\"PRTRPT\") then 1 else 0), {{\"Activity.1\", type number}}),\r\n  #\"Activity 2\" = Table.TransformColumnTypes(Table.AddColumn(Activity, \"Count of Activty_Demand for Activity.1\", each [Activity.1]), {{\"Count of Activty_Demand for Activity.1\", Int64.Type}}),\r\n  #\"Inserted merged column\" = Table.AddColumn(#\"Activity 2\", \"ExamSite Code\", each Text.Combine({[Site], [Room]}, \"\"), type text) in #\"Inserted merged column\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSql_CORE",
								"type": "DatasetReference"
							},
							"name": "AzureSqlCORE"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_Patients",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlCOREStageStep1",
								"type": "DatasetReference"
							},
							"name": "AzureSqlCOREStageStep1"
						}
					],
					"transformations": [
						{
							"name": "AddColumns"
						},
						{
							"name": "window1"
						},
						{
							"name": "lookup1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {CRIS No} as integer,",
						"          Accession as string,",
						"          {Ref Src} as string,",
						"          {Referring Locat} as string,",
						"          Referrer as string,",
						"          Speciality as string,",
						"          GP as string,",
						"          Practice as string,",
						"          {Postcode L} as string,",
						"          {Postcode R} as string,",
						"          Site as string,",
						"          {Request Date} as timestamp,",
						"          {Event Date} as timestamp,",
						"          {Event Time} as string,",
						"          {On Call} as string,",
						"          PT as string,",
						"          RC as string,",
						"          Examination as string,",
						"          {Exam Name} as string,",
						"          Room as string,",
						"          {Start Time} as string,",
						"          {End Time} as string,",
						"          {Radiographer 1} as string,",
						"          {Radiographer 2} as string,",
						"          {Required Clinician} as string,",
						"          {Contrast Code} as string,",
						"          {Qty Used} as decimal(6,2),",
						"          {Exam Key} as integer,",
						"          {Event Key} as integer,",
						"          {Status Code} as string,",
						"          {Booked Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Creation Date} as timestamp,",
						"          Attended as string,",
						"          {Event Key2} as integer,",
						"          {Lead Clinician} as string,",
						"          {Intended Radiologist} as string,",
						"          Urg as string,",
						"          {Referring Locat Name } as string,",
						"          {Referrer Name} as string,",
						"          Modality as string,",
						"          {No of Proc} as integer,",
						"          {GP Name} as string,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Date First Verified} as timestamp,",
						"          {Reported By} as string,",
						"          {Reported By2} as string,",
						"          {Reported By2 Name} as string,",
						"          {Reported By Name} as string,",
						"          {Time First Verified} as string,",
						"          {Time Taken} as integer,",
						"          {Typed By} as string,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          CCG as string,",
						"          Postcode as string,",
						"          {Day of Week} as string,",
						"          {Stat Date} as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> AzureSqlCORE",
						"source(output(",
						"          {CRIS No} as integer,",
						"          {Creation Date} as timestamp,",
						"          {Mutation Date} as timestamp,",
						"          DOB as timestamp,",
						"          {Event Date} as timestamp,",
						"          DOD as timestamp,",
						"          {Ethnic Origin} as string,",
						"          GP as string,",
						"          {No of Attends} as integer,",
						"          {No of Events} as integer,",
						"          {Ref Src} as string,",
						"          {Postcode L} as string,",
						"          {Postcode R} as string,",
						"          Gender as string,",
						"          {Referrer Name} as string,",
						"          {Age at Event} as integer,",
						"          {HIS ID} as string,",
						"          CCG as string,",
						"          Postcode as string,",
						"          {Stat Date} as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"AzureSqlCORE derive({Status Code.1} = toString(null()),",
						"          {Status Date} = toString(null()),",
						"          {Status Time} = toString(null()),",
						"          {Status Time2} = lpad(toString(null()),4,\"0\"),",
						"          Modality2 = toString(null()),",
						"          {Trust Name} = toString(null()),",
						"          Patient_Type = toString(null()),",
						"          {Tat Type} = toString(null()),",
						"          Activity = toString(null()),",
						"          {Count of Activty_Demand for Activity} = toString(null()),",
						"          {ExamSite Code} = toString(null()),",
						"          {Age at Event} = toString(null())) ~> AddColumns",
						"AddColumns window(over({Exam Key}),",
						"     desc({Stat Date}, false),",
						"     Rank = denseRank()) ~> window1",
						"window1, source1 lookup(AzureSqlCORE@{CRIS No} == source1@{CRIS No}",
						"     && AzureSqlCORE@{Event Date} == source1@{Event Date},",
						"     multiple: true,",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {CRIS No} as integer,",
						"          Accession as string,",
						"          {Ref Src} as string,",
						"          Site as string,",
						"          {Request Date} as timestamp,",
						"          {Event Date} as timestamp,",
						"          {Event Time} as string,",
						"          {On Call} as string,",
						"          PT as string,",
						"          Examination as string,",
						"          {Exam Name} as string,",
						"          Room as string,",
						"          {ExamSite Code} as string,",
						"          {Start Time} as string,",
						"          {End Time} as string,",
						"          {Exam Key} as integer,",
						"          {Event Key} as integer,",
						"          {Status Code} as string,",
						"          {Booked Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Creation Date} as timestamp,",
						"          Attended as string,",
						"          Urg as string,",
						"          Modality as string,",
						"          {No of Proc} as integer,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Date First Verified} as timestamp,",
						"          {Time First Verified} as string,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          {Stat Date} as timestamp,",
						"          Modality2 as string,",
						"          {Trust Name} as string,",
						"          Patient_Type as string,",
						"          {Tat Type} as string,",
						"          {Status Time} as string,",
						"          {Reported By} as string,",
						"          Rank as integer,",
						"          {Age At Event} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          {CRIS No},",
						"          Accession,",
						"          {Ref Src},",
						"          Site,",
						"          {Request Date},",
						"          {Event Date},",
						"          {Event Time},",
						"          {On Call},",
						"          PT,",
						"          Examination,",
						"          {Exam Name},",
						"          Room,",
						"          {ExamSite Code},",
						"          {Start Time},",
						"          {End Time},",
						"          {Exam Key},",
						"          {Event Key},",
						"          {Status Code},",
						"          {Booked Date},",
						"          {Booked Time},",
						"          {Creation Date},",
						"          Attended,",
						"          Urg,",
						"          Modality,",
						"          {No of Proc},",
						"          {Planned Appointment Date},",
						"          {Date First Verified},",
						"          {Time First Verified},",
						"          {Was Planned},",
						"          {Was Scheduled},",
						"          {Was Waiting},",
						"          {Stat Date},",
						"          Modality2,",
						"          {Trust Name},",
						"          Patient_Type,",
						"          {Tat Type},",
						"          {Status Time} = {Status Time2},",
						"          {Reported By},",
						"          Rank,",
						"          {Age At Event} = {Age at Event}",
						"     )) ~> AzureSqlCOREStageStep1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSql_PTL",
								"type": "DatasetReference"
							},
							"name": "AzureSqlPTL"
						},
						{
							"dataset": {
								"referenceName": "Referral_Source",
								"type": "DatasetReference"
							},
							"name": "ReferralSource"
						},
						{
							"dataset": {
								"referenceName": "Exam",
								"type": "DatasetReference"
							},
							"name": "Exam"
						},
						{
							"dataset": {
								"referenceName": "Trust",
								"type": "DatasetReference"
							},
							"name": "Trust"
						},
						{
							"dataset": {
								"referenceName": "Modality",
								"type": "DatasetReference"
							},
							"name": "Modality"
						},
						{
							"dataset": {
								"referenceName": "Exam_Site",
								"type": "DatasetReference"
							},
							"name": "ExamSite"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlCOREStageStep2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSQLPTL_V3_Staging",
								"type": "DatasetReference"
							},
							"name": "AzureSqlPTLV2Staging"
						}
					],
					"transformations": [
						{
							"name": "AddColumns"
						},
						{
							"name": "SelectMostRecent"
						},
						{
							"name": "SortColumns"
						},
						{
							"name": "CreateID"
						},
						{
							"name": "RenameandRemoveCols"
						},
						{
							"name": "lookupReferralSource"
						},
						{
							"name": "lookupExam"
						},
						{
							"name": "DeriveTrust"
						},
						{
							"name": "lookupTrust"
						},
						{
							"name": "deriveModlaityCode"
						},
						{
							"name": "lookupModality"
						},
						{
							"name": "derivedEamsiteCode"
						},
						{
							"name": "lookupExamSite"
						},
						{
							"name": "RemoveCols"
						},
						{
							"name": "deriveBookedDateTime"
						},
						{
							"name": "RenameCols3"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Event Key} as integer,",
						"          {Exam Key} as integer,",
						"          {CRIS Number} as integer,",
						"          {Status Category} as string,",
						"          Referrer as string,",
						"          {Ref Src} as string,",
						"          {Referring Location} as string,",
						"          Examination as string,",
						"          Site as string,",
						"          {Request Date} as timestamp,",
						"          {Event Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Booked Date} as timestamp,",
						"          {Ref Src2} as string,",
						"          {Postcode L} as string,",
						"          {Postcode R} as string,",
						"          {Creation Date} as timestamp,",
						"          {Event Key2} as integer,",
						"          Attended as string,",
						"          Modality as string,",
						"          Room as string,",
						"          RC as string,",
						"          Urg as integer,",
						"          {Referrer Name} as string,",
						"          {Exam Name} as string,",
						"          {Event Date2} as timestamp,",
						"          {Days Waiting} as integer,",
						"          {Predicted Reset Date} as timestamp,",
						"          {Waiting Time Reset Date} as timestamp,",
						"          {Weeks Waiting} as integer,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Waiting Breach Date} as timestamp,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          CCG as string,",
						"          {D Status} as string,",
						"          {Stat Date} as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> AzureSqlPTL",
						"source(output(",
						"          {Referral Source} as string,",
						"          {Referral Source ID} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ReferralSource",
						"source(output(",
						"          {Exam Name} as string,",
						"          {Exam Code} as string,",
						"          {Exam ID} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Exam",
						"source(output(",
						"          {Trust Name} as string,",
						"          {Trust ID} as integer,",
						"          {Trust Name Group} as string,",
						"          {Trust Name Group2} as string,",
						"          {Trust Name Group3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Trust",
						"source(output(",
						"          Modality2 as string,",
						"          {Modality ID} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Modality",
						"source(output(",
						"          {Exam Site} as string,",
						"          {Exam Room} as string,",
						"          {Exam Site Code} as string,",
						"          {Exam Room ID} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ExamSite",
						"source(output(",
						"          {CRIS No} as integer,",
						"          Accession as string,",
						"          {Ref Src} as string,",
						"          Site as string,",
						"          {Request Date} as date,",
						"          {Event Date} as date,",
						"          {Event Time} as string,",
						"          {On Call} as string,",
						"          PT as string,",
						"          Examination as string,",
						"          {Exam Name} as string,",
						"          Room as string,",
						"          {Start Time} as string,",
						"          {End Time} as string,",
						"          {Exam Key} as integer,",
						"          {Event Key} as integer,",
						"          {Status Code} as string,",
						"          {Booked Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Creation Date} as timestamp,",
						"          Attended as string,",
						"          Urg as string,",
						"          Modality as string,",
						"          {No of Proc} as integer,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Date First Verified} as timestamp,",
						"          {Time First Verified} as string,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          {Stat Date} as timestamp,",
						"          {Reported By} as string,",
						"          Rank as integer,",
						"          {Age At Event} as string,",
						"          {Status Code.2} as string,",
						"          {Status Date.1} as timestamp,",
						"          {Status Time} as string,",
						"          Modality2 as string,",
						"          {Trust Name} as string,",
						"          Patient_Type as string,",
						"          {Tat Type} as string,",
						"          {Activity.1} as integer,",
						"          {Count of Activty_Demand for Activity.1} as long,",
						"          {ExamSite Code} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"AzureSqlPTL derive({5 Weeks Wait} = iif({Weeks Waiting}>=6,1,0),",
						"          {Booked Datetime} = toString(null()),",
						"          {6 Weeks Wait} = toString(null()),",
						"          {Stat Date} = toDate({Stat Date})) ~> AddColumns",
						"CreateID filter(rank==1) ~> SelectMostRecent",
						"AddColumns sort(desc({Stat Date}, true)) ~> SortColumns",
						"SortColumns rank(desc({Stat Date}, true),",
						"     output(rank as long)) ~> CreateID",
						"SelectMostRecent select(mapColumn(",
						"          {Event Key},",
						"          {Exam Key},",
						"          {CRIS Number},",
						"          {Status Category},",
						"          {Ref Src},",
						"          Examination,",
						"          Site,",
						"          {Request Date},",
						"          {Event Date},",
						"          {Booked Time},",
						"          {Booked Date},",
						"          {Ref Src2},",
						"          {Creation Date},",
						"          Attended,",
						"          Modality,",
						"          Room,",
						"          Urg,",
						"          {Exam Name},",
						"          {Days Waiting},",
						"          {Predicted Reset Date},",
						"          {Waiting Time Reset Date},",
						"          {Weeks Waiting},",
						"          {Planned Appointment Date},",
						"          {Waiting Breach Date},",
						"          {Was Planned},",
						"          {Was Scheduled},",
						"          {Was Waiting},",
						"          {Stat Date},",
						"          {5 Weeks Wait},",
						"          {Booked Datetime},",
						"          {6 Weeks Wait}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameandRemoveCols",
						"RenameandRemoveCols, ReferralSource lookup({Ref Src} == {Referral Source},",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupReferralSource",
						"lookupReferralSource, Exam lookup(Examination == {Exam Code},",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupExam",
						"lookupExamSite derive(Site = iif ({Site} == \"5HA16\", \"LUHFT\", iif ({Site} == \"5NL93\", \"LUHFT\", iif (left({Site},3) == \"REM\", \"LUHFT\", iif (left({Site},3) == \"RQ6\", \"LUHFT\",  iif (left({Site},3) == \"RQ6\", \"LUHFT\", iif (left({Site},3) == \"RQ6\", \"LUHFT\", iif (left({Site},3) == \"RQ6\", \"LUHFT\", iif (left({Site},3) == \"RBL\", \"WUTH\", iif (left({Site},3) == \"RBN\", \"STHK\", iif (left({Site},3) == \"RBQ\", \"LHCH\", iif (left({Site},3) == \"RBS\", \"Alder Hey\", iif (left({Site},3) == \"RBT\", \"MCH\", iif (left({Site},3) == \"REN\", \"CCC\" , iif (left({Site},3) == \"REP\", \"Womens\", iif (left({Site},3) == \"RET\", \"TWC\", iif (left({Site},3) == \"RJR\", \"COCH\", iif (left({Site},3) == \"RVY\", \"S&O\", iif (left({Site},3) == \"RWW\", \"WHH\", {Site}))))))))))))))))))) ~> DeriveTrust",
						"DeriveTrust, Trust lookup(Site == {Trust Name},",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupTrust",
						"lookupExam derive(Modality = iif({Modality} == \"R\", \"Plain X-Ray\", iif({Modality} == \"A\", \"IR\", iif({Modality} == \"B\", \"Mammo\", iif({Modality} == \"C\", \"CT\", iif({Modality} == \"M\", \"MRI\", iif({Modality} == \"F\", \"Fluoro\", iif({Modality} == \"U\", \"NOUS\", iif({Modality} == \"Z\", \"Additional Workload\", iif({Modality} == \"O\", \"Obstetrics\", iif({Modality} == \"N\", \"Nuc Med\", iif({Modality} == \"H\", \"Cardio\", iif({Modality} == \"S\", \"DEXA\", iif({Modality} == \"Y\", \"Med Phys\", iif({Modality} == \"E\", \"Endo\", iif({Modality} == \"D\", \"Doppler\", \"other\")))))))))))))))) ~> deriveModlaityCode",
						"deriveModlaityCode, Modality lookup(Modality == Modality2,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupModality",
						"lookupModality derive(Room = concat({Site},{Room})) ~> derivedEamsiteCode",
						"derivedEamsiteCode, ExamSite lookup(Room == {Exam Site Code},",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupExamSite",
						"lookupTrust select(mapColumn(",
						"          {Event Key},",
						"          {Exam Key},",
						"          {CRIS Number},",
						"          {Status Category},",
						"          {Request Date},",
						"          {Event Date},",
						"          {Booked Time},",
						"          {Booked Date},",
						"          {Creation Date},",
						"          Attended,",
						"          Urg,",
						"          {Days Waiting},",
						"          {Predicted Reset Date},",
						"          {Waiting Time Reset Date},",
						"          {Weeks Waiting},",
						"          {Planned Appointment Date},",
						"          {Waiting Breach Date},",
						"          {Was Planned},",
						"          {Was Scheduled},",
						"          {Was Waiting},",
						"          {Stat Date},",
						"          {5 Weeks Wait},",
						"          {Booked Datetime},",
						"          {6 Weeks Wait},",
						"          {Referral Source ID},",
						"          {Exam ID},",
						"          {Modality ID},",
						"          {Exam Room ID},",
						"          {Trust ID}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveCols",
						"RemoveCols derive({Booked Date} = toTimestamp(concatWS(\" \", left(toString({Booked Date}),10), concatWS(\":\",left({Booked Time}, 2), concatWS(\":\",right({Booked Time}, 2),\"00\"))))) ~> deriveBookedDateTime",
						"lookup1 select(mapColumn(",
						"          {Event Key} = RemoveCols@{Event Key},",
						"          {Exam Key} = RemoveCols@{Exam Key},",
						"          {CRIS Number},",
						"          {Status Category},",
						"          {Request Date} = RemoveCols@{Request Date},",
						"          {Event Date} = RemoveCols@{Event Date},",
						"          {Booked Date Time} = deriveBookedDateTime@{Booked Date},",
						"          {Creation Date} = RemoveCols@{Creation Date},",
						"          Attended = RemoveCols@Attended,",
						"          Urg = RemoveCols@Urg,",
						"          {Days Waiting},",
						"          {Predicted Reset Date},",
						"          {Waiting Time Reset Date},",
						"          {Weeks Waiting},",
						"          {Planned Appointment Date} = RemoveCols@{Planned Appointment Date},",
						"          {Waiting Breach Date},",
						"          {Was Planned} = RemoveCols@{Was Planned},",
						"          {Was Scheduled} = RemoveCols@{Was Scheduled},",
						"          {Was Waiting} = RemoveCols@{Was Waiting},",
						"          {Stat Date} = RemoveCols@{Stat Date},",
						"          {5 Weeks Wait},",
						"          {Booked Datetime},",
						"          {6 Weeks Wait},",
						"          {Referral Source ID},",
						"          {Exam ID},",
						"          {Modality ID},",
						"          {Exam Room ID},",
						"          {Trust ID},",
						"          {Status Code}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameCols3",
						"deriveBookedDateTime, filter1 lookup(RemoveCols@{Exam Key} == source1@{Exam Key},",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"source1 filter(Rank==1) ~> filter1",
						"RenameCols3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AzureSqlPTLV2Staging"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Trust')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSQLPTL_V4_Staging",
								"type": "DatasetReference"
							},
							"name": "AzureSqlCOREV3Staging"
						},
						{
							"dataset": {
								"referenceName": "AzureSql_PTL",
								"type": "DatasetReference"
							},
							"name": "AzureSqlPTL"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Tat_Type",
								"type": "DatasetReference"
							},
							"name": "TatType"
						},
						{
							"dataset": {
								"referenceName": "Trust",
								"type": "DatasetReference"
							},
							"name": "Trust"
						},
						{
							"dataset": {
								"referenceName": "Exam_Site",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "Modality",
								"type": "DatasetReference"
							},
							"name": "Modality"
						},
						{
							"dataset": {
								"referenceName": "Status",
								"type": "DatasetReference"
							},
							"name": "Status"
						},
						{
							"dataset": {
								"referenceName": "Exam",
								"type": "DatasetReference"
							},
							"name": "Exam"
						},
						{
							"dataset": {
								"referenceName": "Patient_Type",
								"type": "DatasetReference"
							},
							"name": "PatientType"
						},
						{
							"dataset": {
								"referenceName": "Referral_Source",
								"type": "DatasetReference"
							},
							"name": "ReferralSource"
						}
					],
					"transformations": [
						{
							"name": "RenameColumns8"
						},
						{
							"name": "RemoveDupes8"
						},
						{
							"name": "RankColumns8"
						},
						{
							"name": "DropColumns8"
						},
						{
							"name": "DeriveColumn8"
						},
						{
							"name": "RenameColumns7"
						},
						{
							"name": "RemoveDupes7"
						},
						{
							"name": "DropColumns7"
						},
						{
							"name": "RankColumns7"
						},
						{
							"name": "DeriveColumn7"
						},
						{
							"name": "RenameColumns6"
						},
						{
							"name": "RemoveDupes6"
						},
						{
							"name": "DropColumns6"
						},
						{
							"name": "JointColumn6"
						},
						{
							"name": "RankColumns6"
						},
						{
							"name": "RenameColumns5"
						},
						{
							"name": "RemoveDupes5"
						},
						{
							"name": "DropColumns5"
						},
						{
							"name": "RankColumns5"
						},
						{
							"name": "RenameColumns4"
						},
						{
							"name": "RemoveDupes4"
						},
						{
							"name": "DropColumns4"
						},
						{
							"name": "RankColumns4"
						},
						{
							"name": "DeriveColumn4"
						},
						{
							"name": "RenameColumns3"
						},
						{
							"name": "RemoveDupes3"
						},
						{
							"name": "DropColumns3"
						},
						{
							"name": "RankColumns3"
						},
						{
							"name": "RenameColumns2"
						},
						{
							"name": "RemoveDupes2"
						},
						{
							"name": "DropColumns2"
						},
						{
							"name": "RankColumns2"
						},
						{
							"name": "RenameColumns1"
						},
						{
							"name": "RemoveDupes1"
						},
						{
							"name": "DropColumns1"
						},
						{
							"name": "RankColumns1"
						},
						{
							"name": "SortColumns1"
						},
						{
							"name": "SortColumns2"
						},
						{
							"name": "SortColumns3"
						},
						{
							"name": "SortColumns4"
						},
						{
							"name": "SortColumns5"
						},
						{
							"name": "SortColumns6",
							"description": "Sorting rows on columns 'Exam Room ID'"
						},
						{
							"name": "SortColumns7"
						},
						{
							"name": "SortColumns8"
						},
						{
							"name": "RenameColumns9"
						},
						{
							"name": "CombineCOREPTL6"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {CRIS No} as integer,",
						"          Accession as string,",
						"          {Ref Src} as string,",
						"          Site as string,",
						"          {Request Date} as date,",
						"          {Event Date} as date,",
						"          {Event Time} as string,",
						"          {On Call} as string,",
						"          PT as string,",
						"          Examination as string,",
						"          {Exam Name} as string,",
						"          Room as string,",
						"          {Start Time} as string,",
						"          {End Time} as string,",
						"          {Exam Key} as integer,",
						"          {Event Key} as integer,",
						"          {Status Code} as string,",
						"          {Booked Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Creation Date} as timestamp,",
						"          Attended as string,",
						"          Urg as string,",
						"          Modality as string,",
						"          {No of Proc} as integer,",
						"          {Age At Event} as integer,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Date First Verified} as timestamp,",
						"          {Time First Verified} as string,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          {Stat Date} as timestamp,",
						"          {Reported By} as string,",
						"          Rank as integer,",
						"          {Status Code.2} as string,",
						"          {Status Date.1} as timestamp,",
						"          {Status Time} as string,",
						"          Modality2 as string,",
						"          {Trust Name} as string,",
						"          Patient_Type as string,",
						"          {Tat Type} as string,",
						"          {Activity.1} as integer,",
						"          {Count of Activty_Demand for Activity.1} as long,",
						"          {ExamSite Code} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> AzureSqlCOREV3Staging",
						"source(output(",
						"          {Event Key} as integer,",
						"          {Exam Key} as integer,",
						"          {CRIS Number} as integer,",
						"          {Status Category} as string,",
						"          Referrer as string,",
						"          {Ref Src} as string,",
						"          {Referring Location} as string,",
						"          Examination as string,",
						"          Site as string,",
						"          {Request Date} as timestamp,",
						"          {Event Date} as timestamp,",
						"          {Booked Time} as string,",
						"          {Booked Date} as timestamp,",
						"          {Ref Src2} as string,",
						"          {Postcode L} as string,",
						"          {Postcode R} as string,",
						"          {Creation Date} as timestamp,",
						"          {Event Key2} as integer,",
						"          Attended as string,",
						"          Modality as string,",
						"          Room as string,",
						"          RC as string,",
						"          Urg as integer,",
						"          {Referrer Name} as string,",
						"          {Exam Name} as string,",
						"          {Event Date2} as timestamp,",
						"          {Days Waiting} as integer,",
						"          {Predicted Reset Date} as timestamp,",
						"          {Waiting Time Reset Date} as timestamp,",
						"          {Weeks Waiting} as integer,",
						"          {Planned Appointment Date} as timestamp,",
						"          {Waiting Breach Date} as timestamp,",
						"          {Was Planned} as string,",
						"          {Was Scheduled} as string,",
						"          {Was Waiting} as string,",
						"          CCG as string,",
						"          {D Status} as string,",
						"          {Stat Date} as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> AzureSqlPTL",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          {Tat Type}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns8",
						"RenameColumns8 aggregate(groupBy({Tat Type}),",
						"     First = first({Tat Type})) ~> RemoveDupes8",
						"DropColumns8 rank(asc({Tat Type}, true),",
						"     output({Tat Type ID} as long),",
						"     dense: true) ~> RankColumns8",
						"RemoveDupes8 select(mapColumn(",
						"          {Tat Type}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns8",
						"RankColumns8 derive(Target = iif({Tat Type} == \"Urgent Inpatients\",\"12 hours\",iif({Tat Type} == \"Non-Urgent Inpatients\", \"24 hours\",iif({Tat Type} == \"Outpatient Faster Diagnosis Standard Cancer Pathway\", \"3 days\",iif({Tat Type} == \"Urgent GP and Outpatients\", \"7 days\",iif({Tat Type} == \"All Other Routine Outpatient and GP Studies\", \"28 days\",iif({Tat Type} == \"Acutely Unwell/ED Patients\", \"12 hours\",iif({Tat Type} == \"Other Inpatients\" , \"7 days\",iif({Tat Type} == \"Urgent GP/Urgent Outpatients\", \"7 days\",iif({Tat Type} == \"Routine GP and outpatients\", \"28 days\",iif({Tat Type} == \"Ultrasound and interventional Radiology\", \"3 hours\",\"0\"))))))))))) ~> DeriveColumn8",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          {Trust Name}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns7",
						"RenameColumns7 aggregate(groupBy({Trust Name}),",
						"     First = first({Trust Name})) ~> RemoveDupes7",
						"RemoveDupes7 select(mapColumn(",
						"          {Trust Name}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns7",
						"DropColumns7 rank(asc({Trust Name}, true),",
						"     output({Trust ID} as long),",
						"     dense: true) ~> RankColumns7",
						"RankColumns7 derive({Trust Name Group} = iif( {Trust Name} == \"Womens\", \"REP\", iif( {Trust Name} == \"LUHFT\", \"REM\", iif( {Trust Name} == \"WUTH\", \"RBL\", iif( {Trust Name} == \"STHK\", \"RBN\", iif( {Trust Name} == \"S&O\", \"RVY\", iif( {Trust Name} == \"LHCH\", \"RBQ\", iif( {Trust Name} == \"Alder Hey\", \"RBS\", iif( {Trust Name} == \"MCH\", \"RBT\", iif( {Trust Name} == \"CCC\", \"REN\", iif( {Trust Name} == \"TWC\", \"RET\", iif( {Trust Name} == \"COCH\", \"RJR\", iif( {Trust Name} == \"WHH\", \"RWW\", iif( {Trust Name} == \"5M501\", \"REM\", iif( {Trust Name} == \"NTD05\", \"REM\", \"Other\")))))))))))))),",
						"          {Trust Name Group2} = iif( {Trust Name} == \"Womens\", \"Womens\", iif( {Trust Name} == \"LUHFT\", \"LUHFT\", iif( {Trust Name} == \"WUTH\", \"WUTH\", iif( {Trust Name} == \"STHK\", \"STHK\", iif( {Trust Name} == \"S&O\", \"S&O\", iif( {Trust Name} == \"LHCH\", \"LHCH\", iif( {Trust Name} == \"Alder Hey\", \"Alder Hey\", iif( {Trust Name} == \"MCH\", \"MCH\", iif( {Trust Name} == \"CCC\", \"CCC\", iif( {Trust Name} == \"TWC\", \"TWC\", iif( {Trust Name} == \"COCH\", \"COCH\", iif( {Trust Name} == \"WHH\", \"WHH\", iif( {Trust Name} == \"5M501\", \"LUHFT\", iif( {Trust Name} == \"NTD05\", \"LUHFT\", \"Other\")))))))))))))),",
						"          {Trust Name Group3} = iif( {Trust Name} == \"Womens\", \"REP\", iif( {Trust Name} == \"LUHFT\", \"REM\", iif( {Trust Name} == \"WUTH\", \"WUTH\", iif( {Trust Name} == \"STHK\", \"RBN\", iif( {Trust Name} == \"S&O\", \"RVY\", iif( {Trust Name} == \"LHCH\", \"RBQ\", iif( {Trust Name} == \"Alder Hey\", \"RBS\", iif( {Trust Name} == \"MCH\", \"RBT\", iif( {Trust Name} == \"CCC\", \"REN\", iif( {Trust Name} == \"TWC\", \"RET\", iif( {Trust Name} == \"COCH\", \"COCH\", iif( {Trust Name} == \"WHH\", \"RWW\", \"Other\"))))))))))))) ~> DeriveColumn7",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          {Exam Site} = Site,",
						"          {Exam Room} = Room",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns6",
						"CombineCOREPTL6 aggregate(groupBy({Exam Site},",
						"          {Exam Room}),",
						"     First = first({Exam Room})) ~> RemoveDupes6",
						"RemoveDupes6 select(mapColumn(",
						"          {Exam Site},",
						"          {Exam Room}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns6",
						"DropColumns6 derive({ExamSite Code} = iifNull({Exam Site},'\\n',{Exam Site})+iifNull({Exam Room},'\\n',{Exam Room})) ~> JointColumn6",
						"JointColumn6 rank(asc({ExamSite Code}, true),",
						"     output({Exam Room ID} as long)) ~> RankColumns6",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          Modality2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns5",
						"RenameColumns5 aggregate(groupBy(Modality2),",
						"     First = first({Modality2})) ~> RemoveDupes5",
						"RemoveDupes5 select(mapColumn(",
						"          Modality2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns5",
						"DropColumns5 rank(asc(Modality2, true),",
						"     output({Modality ID} as long)) ~> RankColumns5",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          {Status Code}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns4",
						"RenameColumns4 aggregate(groupBy({Status Code}),",
						"     First = first({Status Code})) ~> RemoveDupes4",
						"RemoveDupes4 select(mapColumn(",
						"          {Status Code}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns4",
						"DropColumns4 rank(asc({Status Code}, true),",
						"     output({Status ID} as long)) ~> RankColumns4",
						"RankColumns4 derive({Status Category} = iif(startsWith({Status Code}, \"AP\"), \"AP\", iif(startsWith({Status Code}, \"AS\"), \"AS\", iif(startsWith({Status Code}, \"AT\"), \"AT\", iif(startsWith({Status Code}, \"C\"), \"C\", iif(startsWith({Status Code}, \"D\"), \"D\", iif(startsWith({Status Code}, \"E\"), \"E\", iif(startsWith({Status Code}, \"P\"), \"P\", iif(startsWith({Status Code}, \"R\"), \"R\", iif(startsWith({Status Code}, \"V\"), \"V\", iif(startsWith({Status Code}, \"W\"), \"W\", iif({Status Code} == \"BHSRAI\", \"ST\", iif({Status Code} == \"ACNCLI\", \"W\", iif({Status Code} == \"SRREPC\", \"ST\", \"0\")))))))))))))) ~> DeriveColumn4",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          {Exam Code} = Examination,",
						"          {Exam Name}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns3",
						"RenameColumns3 aggregate(groupBy({Exam Code},",
						"          {Exam Name}),",
						"     first = first({Exam Code})) ~> RemoveDupes3",
						"RemoveDupes3 select(mapColumn(",
						"          {Exam Code},",
						"          {Exam Name}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns3",
						"DropColumns3 rank(asc({Exam Code}, true),",
						"     output({Exam ID} as long)) ~> RankColumns3",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          Patient_Type",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns2",
						"RenameColumns2 aggregate(groupBy(Patient_Type),",
						"     first = first({Patient_Type})) ~> RemoveDupes2",
						"RemoveDupes2 select(mapColumn(",
						"          Patient_Type",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns2",
						"DropColumns2 rank(asc(Patient_Type, true),",
						"     output({Patient Type ID} as long)) ~> RankColumns2",
						"AzureSqlCOREV3Staging select(mapColumn(",
						"          {Referral Source} = {Ref Src}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns1",
						"RenameColumns1 aggregate(groupBy({Referral Source}),",
						"     first = first({Referral Source})) ~> RemoveDupes1",
						"RemoveDupes1 select(mapColumn(",
						"          {Referral Source}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DropColumns1",
						"DropColumns1 rank(asc({Referral Source}, true),",
						"     output({Referral Source ID} as long)) ~> RankColumns1",
						"RankColumns1 sort(asc({Referral Source ID}, true)) ~> SortColumns1",
						"RankColumns2 sort(asc({Patient Type ID}, true)) ~> SortColumns2",
						"RankColumns3 sort(asc({Exam ID}, true)) ~> SortColumns3",
						"DeriveColumn4 sort(asc({Status ID}, true)) ~> SortColumns4",
						"RankColumns5 sort(asc({Modality ID}, true)) ~> SortColumns5",
						"RankColumns6 sort(asc({Exam Room ID}, true)) ~> SortColumns6",
						"DeriveColumn7 sort(asc({Trust ID}, true)) ~> SortColumns7",
						"DeriveColumn8 sort(asc({Tat Type ID}, true)) ~> SortColumns8",
						"AzureSqlPTL select(mapColumn(",
						"          {Exam Site} = Site,",
						"          {Exam Room} = Room",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns9",
						"RenameColumns6, RenameColumns9 union(byName: true)~> CombineCOREPTL6",
						"SortColumns8 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Tat Type} as string,",
						"          {Tat Type ID} as integer,",
						"          Target as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> TatType",
						"SortColumns7 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Trust Name} as string,",
						"          {Trust ID} as integer,",
						"          {Trust Name Group} as string,",
						"          {Trust Name Group2} as string,",
						"          {Trust Name Group3} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Trust",
						"SortColumns6 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Exam Site} as string,",
						"          {Exam Room} as string,",
						"          {Exam Site Code} as string,",
						"          {Exam Room ID} as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
						"SortColumns5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Modality2 as string,",
						"          {Modality ID} as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Modality",
						"SortColumns4 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Status Code} as string,",
						"          {Status ID} as integer,",
						"          {Status Category} as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Status",
						"SortColumns3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Exam Name} as string,",
						"          {Exam Code} as string,",
						"          {Exam ID} as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> Exam",
						"SortColumns2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Patient_Type as string,",
						"          Patient_Type_ID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> PatientType",
						"SortColumns1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Referral Source} as string,",
						"          {Referral Source ID} as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ReferralSource"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Tat_Type')]",
				"[concat(variables('factoryId'), '/datasets/Trust')]",
				"[concat(variables('factoryId'), '/datasets/Status')]"
			]
		}
	]
}