{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSql_CORE_V2_Staging",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Patient_Type",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "Modality",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "Status",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "Exam",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "Exam_Site",
						"type": "DatasetReference"
					},
					"name": "source6"
				},
				{
					"dataset": {
						"referenceName": "Trust",
						"type": "DatasetReference"
					},
					"name": "source7"
				},
				{
					"dataset": {
						"referenceName": "Referral_Source",
						"type": "DatasetReference"
					},
					"name": "source8"
				},
				{
					"dataset": {
						"referenceName": "Tat_Type",
						"type": "DatasetReference"
					},
					"name": "source9"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSql_CORE_V2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "MapDrifted2",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "select1"
				},
				{
					"name": "MapDrifted3",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				},
				{
					"name": "select5"
				},
				{
					"name": "select6"
				},
				{
					"name": "select7"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select8"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "lookup2"
				},
				{
					"name": "lookup3"
				},
				{
					"name": "lookup4"
				},
				{
					"name": "lookup5"
				},
				{
					"name": "lookup6"
				},
				{
					"name": "lookup7"
				},
				{
					"name": "lookup8"
				},
				{
					"name": "select9"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {CRIS No} as integer,",
				"          Accession as string,",
				"          {Ref Src} as string,",
				"          Site as string,",
				"          {Request Date} as timestamp,",
				"          {Event Date} as timestamp,",
				"          {Event Time} as string,",
				"          {On Call} as string,",
				"          PT as string,",
				"          Examination as string,",
				"          {Exam Name} as string,",
				"          Room as string,",
				"          {ExamSite Code} as string,",
				"          {Start Time} as string,",
				"          {End Time} as string,",
				"          {Exam Key} as integer,",
				"          {Event Key} as integer,",
				"          {Status Code} as string,",
				"          {Booked Date} as timestamp,",
				"          {Booked Time} as string,",
				"          {Creation Date} as timestamp,",
				"          Attended as string,",
				"          Urg as string,",
				"          Modality as string,",
				"          {No of Proc} as integer,",
				"          {Planned Appointment Date} as timestamp,",
				"          {Date First Verified} as timestamp,",
				"          {Time First Verified} as string,",
				"          {Was Planned} as string,",
				"          {Was Scheduled} as string,",
				"          {Was Waiting} as string,",
				"          {Stat Date} as timestamp,",
				"          {Status Date} as timestamp,",
				"          {Status Time} as integer,",
				"          Modality2 as string,",
				"          {Trust Name} as string,",
				"          Patient_Type as string,",
				"          {Tat Type} as string,",
				"          Activity as integer,",
				"          {Count of Activty_Demand for Activity} as integer,",
				"          {Status Code2} as string,",
				"          {Status Time2} as string,",
				"          {Patient Type ID} as integer,",
				"          {Modality ID} as integer,",
				"          {Status ID} as integer,",
				"          {Status Category} as string,",
				"          {Exam Code} as string,",
				"          {Exam ID} as integer,",
				"          {Exam Site} as string,",
				"          {Exam Room} as string,",
				"          {Exam Site Code} as string,",
				"          {Exam Room ID} as integer,",
				"          {Trust ID} as integer,",
				"          {Trust Name Group} as string,",
				"          {Trust Name Group2} as string,",
				"          {Trust Name Group3} as string,",
				"          {Referral Source} as string,",
				"          {Referral Source ID} as integer,",
				"          {Tat Type ID} as integer,",
				"          Target as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          Patient_Type as string,",
				"          Patient_Type_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          Modality2 as string,",
				"          {Modality ID} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source(output(",
				"          {Status Code} as string,",
				"          {Status ID} as integer,",
				"          {Status Category} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source4",
				"source(output(",
				"          {Exam Name} as string,",
				"          {Exam Code} as string,",
				"          {Exam ID} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source5",
				"source(output(",
				"          {Exam Site} as string,",
				"          {Exam Room} as string,",
				"          {Exam Site Code} as string,",
				"          {Exam Room ID} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source6",
				"source(output(",
				"          {Trust Name} as string,",
				"          {Trust ID} as integer,",
				"          {Trust Name Group} as string,",
				"          {Trust Name Group2} as string,",
				"          {Trust Name Group3} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source7",
				"source(output(",
				"          {Referral Source} as string,",
				"          {Referral Source ID} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source8",
				"source(output(",
				"          {Tat Type} as string,",
				"          {Tat Type ID} as integer,",
				"          Target as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source9",
				"lookup1 derive({Patient Type ID} = toLong(byName('Patient Type ID'))) ~> MapDrifted1",
				"source6 derive({ExamSite Code} = toString(byName('ExamSite Code'))) ~> MapDrifted2",
				"lookup8 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name},",
				"          Room,",
				"          {ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2,",
				"          {Trust Name},",
				"          Patient_Type,",
				"          {Tat Type} = select7@{Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID},",
				"          {Modality ID},",
				"          {Status ID},",
				"          {Exam ID},",
				"          {Exam Room ID},",
				"          {Trust ID},",
				"          {Referral Source ID},",
				"          {Tat Type ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 derive({Patient Type ID} = toLong(byName('Patient Type ID'))) ~> MapDrifted3",
				"MapDrifted1 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name},",
				"          Room,",
				"          {ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2,",
				"          {Trust Name},",
				"          Patient_Type = source1@Patient_Type,",
				"          {Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"lookup3 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name},",
				"          Room,",
				"          {ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code} = select2@{Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2 = select2@Modality2,",
				"          {Trust Name},",
				"          Patient_Type,",
				"          {Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID},",
				"          {Modality ID},",
				"          {Status ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"lookup4 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name} = select3@{Exam Name},",
				"          Room,",
				"          {ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2,",
				"          {Trust Name},",
				"          Patient_Type,",
				"          {Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID},",
				"          {Modality ID},",
				"          {Status ID},",
				"          {Exam ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"lookup5 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name},",
				"          Room,",
				"          {ExamSite Code} = select4@{ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2,",
				"          {Trust Name},",
				"          Patient_Type,",
				"          {Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID},",
				"          {Modality ID},",
				"          {Status ID},",
				"          {Exam ID},",
				"          {Exam Room ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"lookup6 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name},",
				"          Room,",
				"          {ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2,",
				"          {Trust Name} = select5@{Trust Name},",
				"          Patient_Type,",
				"          {Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID},",
				"          {Modality ID},",
				"          {Status ID},",
				"          {Exam ID},",
				"          {Exam Room ID},",
				"          {Trust ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"lookup7 select(mapColumn(",
				"          {CRIS No},",
				"          Accession,",
				"          {Ref Src},",
				"          Site,",
				"          {Request Date},",
				"          {Event Date},",
				"          {Event Time},",
				"          {On Call},",
				"          PT,",
				"          Examination,",
				"          {Exam Name},",
				"          Room,",
				"          {ExamSite Code},",
				"          {Start Time},",
				"          {End Time},",
				"          {Exam Key},",
				"          {Event Key},",
				"          {Status Code},",
				"          {Booked Date},",
				"          {Booked Time},",
				"          {Creation Date},",
				"          Attended,",
				"          Urg,",
				"          Modality,",
				"          {No of Proc},",
				"          {Planned Appointment Date},",
				"          {Date First Verified},",
				"          {Time First Verified},",
				"          {Was Planned},",
				"          {Was Scheduled},",
				"          {Was Waiting},",
				"          {Stat Date},",
				"          {Status Date},",
				"          {Status Time},",
				"          Modality2,",
				"          {Trust Name},",
				"          Patient_Type,",
				"          {Tat Type},",
				"          Activity,",
				"          {Count of Activty_Demand for Activity},",
				"          {Status Code2},",
				"          {Status Time2},",
				"          {Patient Type ID},",
				"          {Modality ID},",
				"          {Status ID},",
				"          {Exam ID},",
				"          {Exam Room ID},",
				"          {Trust ID},",
				"          {Referral Source ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"source1 derive({Status Time2} = lpad(toString({Status Time}),4,\"0\")) ~> derivedColumn1",
				"MapDrifted3 select(mapColumn(",
				"          Patient_Type,",
				"          {Patient Type ID}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select8",
				"derivedColumn1, select8 lookup(source1@Patient_Type == select8@Patient_Type,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"select2, source3 lookup(select2@Modality2 == source3@Modality2,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup2",
				"lookup2, source4 lookup(select2@{Status Code} == source4@{Status Code},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup3",
				"select3, source5 lookup(Examination == {Exam Code},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup4",
				"select4, MapDrifted2 lookup(select4@{ExamSite Code} == MapDrifted2@{ExamSite Code},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup5",
				"select5, source7 lookup(select5@{Trust Name} == source7@{Trust Name},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup6",
				"select6, source8 lookup({Ref Src} == {Referral Source},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup7",
				"select7, source9 lookup(select7@{Tat Type} == source9@{Tat Type},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup8",
				"MapDrifted2 select(mapColumn(",
				"          {Exam Site},",
				"          {Exam Room},",
				"          {Exam Room ID},",
				"          {ExamSite Code}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {CRIS No} as integer,",
				"          Accession as string,",
				"          {Ref Src} as string,",
				"          Site as string,",
				"          {Request Date} as timestamp,",
				"          {Event Date} as timestamp,",
				"          {Event Time} as string,",
				"          {On Call} as string,",
				"          PT as string,",
				"          Examination as string,",
				"          {Exam Name} as string,",
				"          Room as string,",
				"          {ExamSite Code} as string,",
				"          {Start Time} as string,",
				"          {End Time} as string,",
				"          {Exam Key} as integer,",
				"          {Event Key} as integer,",
				"          {Status Code} as string,",
				"          {Booked Date} as timestamp,",
				"          {Booked Time} as string,",
				"          {Creation Date} as timestamp,",
				"          Attended as string,",
				"          Urg as string,",
				"          Modality as string,",
				"          {No of Proc} as integer,",
				"          {Planned Appointment Date} as timestamp,",
				"          {Date First Verified} as timestamp,",
				"          {Time First Verified} as string,",
				"          {Was Planned} as string,",
				"          {Was Scheduled} as string,",
				"          {Was Waiting} as string,",
				"          {Stat Date} as timestamp,",
				"          {Status Date} as timestamp,",
				"          {Status Time} as integer,",
				"          Modality2 as string,",
				"          {Trust Name} as string,",
				"          Patient_Type as string,",
				"          {Tat Type} as string,",
				"          Activity as integer,",
				"          {Count of Activty_Demand for Activity} as integer,",
				"          {Status Code2} as string,",
				"          {Status Time2} as string,",
				"          {Patient Type ID} as integer,",
				"          {Modality ID} as integer,",
				"          {Status ID} as integer,",
				"          {Status Category} as string,",
				"          {Exam Code} as string,",
				"          {Exam ID} as integer,",
				"          {Exam Site} as string,",
				"          {Exam Room} as string,",
				"          {Exam Site Code} as string,",
				"          {Exam Room ID} as integer,",
				"          {Trust ID} as integer,",
				"          {Trust Name Group} as string,",
				"          {Trust Name Group2} as string,",
				"          {Trust Name Group3} as string,",
				"          {Referral Source} as string,",
				"          {Referral Source ID} as integer,",
				"          {Tat Type ID} as integer,",
				"          Target as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}