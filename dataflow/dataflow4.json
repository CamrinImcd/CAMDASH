{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSql_STATUSES",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "window1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Exam Key} as integer,",
				"          {Event Key} as integer,",
				"          Accession as string,",
				"          Referrer as string,",
				"          {Referral Location} as string,",
				"          {Referral Source} as string,",
				"          Urg as string,",
				"          Site as string,",
				"          {Status Code} as string,",
				"          {Status Date} as timestamp,",
				"          {Status Time} as integer,",
				"          {Referral Location Name} as string,",
				"          {Referral Source Name} as string,",
				"          {Referral Name} as string,",
				"          {Examination Name} as string,",
				"          Modality as string,",
				"          {Status Code at State Date} as string,",
				"          {Stat Date} as timestamp,",
				"          {D Status} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"filter1 window(over({Exam Key}),",
				"     desc({Status Date}, true),",
				"     desc({Status Time}, false),",
				"     asc({Status Code at State Date}, false),",
				"     Rank = denseRank()) ~> window1",
				"source1 filter({Status Code}==\"RR\") ~> filter1",
				"window1 filter(Rank==1) ~> filter2",
				"filter2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}